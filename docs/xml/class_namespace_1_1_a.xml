<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_namespace_1_1_a" kind="class" language="C++" prot="public">
    <compoundname>Namespace::A</compoundname>
    <basecompoundref refid="class_namespace_1_1_private_base" prot="private" virt="non-virtual">Namespace::PrivateBase</basecompoundref>
    <basecompoundref refid="class_another_1_1_protected_base" prot="protected" virt="non-virtual">Another::ProtectedBase</basecompoundref>
    <basecompoundref refid="class_namespace_1_1_undocumented_base" prot="public" virt="non-virtual">Namespace::UndocumentedBase</basecompoundref>
    <basecompoundref refid="class_namespace_1_1_virtual_base" prot="public" virt="virtual">Namespace::VirtualBase</basecompoundref>
    <derivedcompoundref refid="class_another_1_1_derived" prot="public" virt="non-virtual">Another::Derived</derivedcompoundref>
    <derivedcompoundref refid="struct_namespace_1_1_undocumented_derived" prot="public" virt="non-virtual">Namespace::UndocumentedDerived</derivedcompoundref>
    <includes refid="cpp__derived_2input_8h" local="no">input.h</includes>
    <briefdescription>
<para><ref refid="class_namespace_1_1_a" kindref="compound">A</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>Should list one protected base (fully qualified) and one virtual base (omitting the common namespace), one derived class (fully qualified). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Another::ProtectedBase</label>
        <link refid="class_another_1_1_protected_base"/>
      </node>
      <node id="7">
        <label>Another::Derived</label>
        <link refid="class_another_1_1_derived"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Namespace::A</label>
        <link refid="class_namespace_1_1_a"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
        <childnode refid="4" relation="protected-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Namespace::UndocumentedBase</label>
        <link refid="class_namespace_1_1_undocumented_base"/>
      </node>
      <node id="3">
        <label>Namespace::PrivateBase</label>
        <link refid="class_namespace_1_1_private_base"/>
      </node>
      <node id="8">
        <label>Namespace::UndocumentedDerived</label>
        <link refid="struct_namespace_1_1_undocumented_derived"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Namespace::VirtualBase</label>
        <link refid="class_namespace_1_1_virtual_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>Another::ProtectedBase</label>
        <link refid="class_another_1_1_protected_base"/>
      </node>
      <node id="9">
        <label>Namespace::A</label>
        <link refid="class_namespace_1_1_a"/>
        <childnode refid="10" relation="private-inheritance">
        </childnode>
        <childnode refid="11" relation="protected-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Namespace::UndocumentedBase</label>
        <link refid="class_namespace_1_1_undocumented_base"/>
      </node>
      <node id="10">
        <label>Namespace::PrivateBase</label>
        <link refid="class_namespace_1_1_private_base"/>
      </node>
      <node id="13">
        <label>Namespace::VirtualBase</label>
        <link refid="class_namespace_1_1_virtual_base"/>
      </node>
    </collaborationgraph>
    <location file="m.css/doxygen/test/cpp_derived/input.h" line="28" column="1" bodyfile="m.css/doxygen/test/cpp_derived/input.h" bodystart="28" bodyend="28"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
